
################################################
    CONDA CHEAT SHEET

################################################

################################################
Basics
################################################

# list packages
conda list

# list environments
conda info --envs

################################################
Environments
################################################

# Create new environment (simple)
conda create my_env_name

# Create new environment with custom path and python version
conda config --append envs_dirs my_custom_path # make sure custom location is discoverable for conda
conda create --prefix=my_custom_path\my_env_name python=3.6.7

# Create new environment with default anaconda packages
conda create --prefix=my_custom_path\my_env_name anaconda

# remove environment
conda env remove --name env_name

# Clone existing environment
conda create --name <new_env> --clone <old_env>

################################################
Setting up Data Science development environment
################################################
# - Python 3.6/ Latest R version
# - Bundles of essential Python/R packages
# - Additional packages (e.g. rpy2)
# - RStudio
# Useful links:
# - https://stackoverflow.com/questions/38066873/create-anaconda-python-environment-with-all-packages
# - https://towardsdatascience.com/a-guide-to-conda-environments-bc6180fc533
# - https://community.rstudio.com/t/why-not-r-via-conda/9438/3
#
# additional_packages.txt:
#  rpy2==2.9.4

################
# Installation
################
# Install base packages and programs
conda config --append envs_dirs <my_custom_path>
conda create --prefix <my_custom_path>\<env_name> anaconda python=3.6 r-essentials r-base
# install additional packages
conda activate <env_name>
conda install -y --file <path_to_additional_packages.txt>
# install rstudio
conda install -c r rstudio

# Done!

################
# Addig packages
################

# Always try conda install first. This downloads packages to Anaconda installation
# directory home\Anaconda3\pkgs where conda environments knows to fetch and install them.
conda activate <env_name>
conda install <pckg_name>

# Python packages tend to be well available via conda install. However, if it is not, one can also try to install via pip to the conda enviroment (see http://know.continuum.io/rs/387-XNW-688/images/conda-cheatsheet.pdf):
conda activate <env_name>
pip install <pckg_name>

# Some R packages/their correct version are not available via conta install. If desired R package
# is not found via conda, install it via R to R lib path. A few things before this:
#  - If possible, install needed dependencies via conda first.
#  - Make sure conda lib path <my_custom_path>\<env_name>\Lib\R\library comes before R default lib path.
#    This makes sure when importing in R conda installed packages come first.
.libPaths( new=c( "<my_custom_path>/<env_name>/Lib/R/library" , .libPaths() ) )
#    To make lib path ordering permanent, add the same line to .Rprofile file under
#    <my_custom_path>/<env_name>/Lib/R/library/base/R  -> DOES NOT WORK SOMEHOW!
#  - Install package via R to R default lib path, e.g. "home/Documents/R/win-library/3.6".
#    Try first without installing dependencies, as we tried to include them via conda.
#    If this fails or dependencies installed via conda have wrong versions available,
#    let R installation install also dependencies. In summary:
#    First try
install.packages("mylib", lib="home/Documents/R/win-library/3.6", dependencies = FALSE)
#    If it does not work, try
install.packages("mylib", lib="home/Documents/R/win-library/3.6", dependencies = TRUE)     

################
# Loading packages
################
# Make sure conda lib path comes first in .libPaths(). It could even be made the only path
# if we are sure that we don't need any manually installed packages.
# If we want to be sure where we download a package from, use lib.loc parameter
library(pckg, lib.loc = "home/Documents/R/win-library/3.6")
library(pckg, lib.loc = "<my_custom_path>/<env_name>/Lib/R/library")

################
# Note about conda envs and Jupyter
https://stackoverflow.com/questions/39604271/conda-environments-not-showing-up-in-jupyter-notebook/56409235#56409235
################
# One should only install jupyter in one env, where you also install nb_conda_kernels.
# In all other envs you install ipykernel. Always launch jupyter notebook from the
# single env that has jupyter installed, then you can choose your the other envs as kernels.
# If desired envis not visible in Jupyter, run this:
source activate <env_name>
python -m ipykernel install --user --name <env_name> --display-name "Python (env_name)"
